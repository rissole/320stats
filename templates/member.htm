{% extends "base.htm" %}{% block title %}{{ name }}{% endblock %}{% block css %}    {{ super() }}    <link href="//cdnjs.cloudflare.com/ajax/libs/nvd3/1.1.13-beta/nv.d3.min.css" rel="stylesheet">    <style>        ul.blazed-post-list {            list-style-type: none;            padding-left: 20px;        }        ul.blazed-post-list > li:before {            font-family: "Glyphicons Halflings";            content: "\e104";            padding-right: 5px;        }    </style>{% endblock %}{% block content %}    <div class="jumbotron text-center">        <img src="https://graph.facebook.com/{{ uid }}/picture?width=200&height=200" class="img-circle" />        <h1>{{ name }}</h1>        <div class="row">            <div class="col-md-12">                <button type="button" title="Posts" class="btn btn-danger btn-sm" onclick="$('html,body').animate({scrollTop:$('h1.posts').offset().top}, 1000)"><span class="glyphicon glyphicon-file"></span> {{ total_posts }}</button>                <button type="button" title="Comments" class="btn btn-primary btn-sm" onclick="$('html,body').animate({scrollTop:$('h1.comments').offset().top}, 1000)"><span class="glyphicon glyphicon-comment"></span> {{ total_comments }}</button>            </div>        </div>    </div>    <div class="well">        <div class="row">            <div class="col-md-12">                <h1 class="posts">Posts <span class="label label-default" style="padding: .2em .6em">{{ total_posts }}</span></h1>            </div>        </div>        <div class="row">            <div class="col-md-6 text-center">                <h3>Likes received on posts <span class="label label-default" style="padding: .2em .6em">{{ total_post_likes }}</span></h2>                <div id="post-likes-chart">                    <svg style="margin-left: auto; margin-right: auto; display: block; height:500px; width:500px"></svg>                </div>            </div>            <div class="col-md-6 text-center">                <h3>Likes given to posts <span class="label label-default" style="padding: .2em .6em">{{ total_post_likes_given }}</span></h2>                <div id="post-likes-given-chart">                    <svg style="margin-left: auto; margin-right: auto; display: block; height:500px; width:500px"></svg>                </div>            </div>        </div>        <div class="row">            <div class="col-md-12">                <h3>Blazed posts <span class="label label-default" style="padding: .2em .6em">{{ blazed_posts|count }}</span>                  <span class="glyphicon glyphicon-question-sign" title="Posts liked by every member (not counting yourself)" style="top: 5px"></span>                </h3>                <ul class="blazed-post-list">                {% for post in blazed_posts %}                  <li><a href="http://www.facebook.com/{{ post.id }}">{{ post.message }}</a></li>                {% endfor %}                </ul>            </div>        </div>    </div>    <div class="well">        <div class="row">            <div class="col-md-12">                <h1 class="comments">Comments <span class="label label-default" style="padding: .2em .6em">{{ total_comments }}</span></h1>            </div>        </div>        <div class="row">            <div class="col-md-12">                <h3>Comments Word Cloud</h3>            </div>        </div>        <div class="row">            <div class="col-md-12">                <div id="wordcloud-comments" >                    <svg style="width: 960px; height: 600px; margin-left: auto; margin-right: auto; display: block"></svg>                </div>            </div>        </div    </div>{% endblock %}{% block scripts %}    {{ super() }}    <script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.3.9/d3.min.js" charset="utf-8"></script>    <script src="{{url_for('static', filename='d3.layout.cloud.js')}}"></script>    <script src="//cdnjs.cloudflare.com/ajax/libs/nvd3/1.1.13-beta/nv.d3.min.js"></script>    <script>    var w = 960, h = 600;    var words = {{ words|tojson|safe }};    var fill = d3.scale.category20();        var svg = d3.select("#wordcloud-comments svg")    .style("width", w)    .style("height", h);        var background = svg.append("g"),        vis = svg.append("g")        .attr("transform", "translate(" + [w >> 1, h >> 1] + ")");    var layout = d3.layout.cloud()     .timeInterval(10)     .size([w, h])     .fontSize(function(d) { return fontSize(+d.size); })     .text(function(d) { return d.text; })     .on("end", draw);        layout      .font("Impact")    fontSize = d3.scale['log']().range([10, 100]);    fontSize.domain([+words[words.length - 1].size, +words[0].size]);    layout.stop().words(words).start();    function draw(data, bounds) {        scale = bounds ? Math.min(          w / Math.abs(bounds[1].x - w / 2),          w / Math.abs(bounds[0].x - w / 2),          h / Math.abs(bounds[1].y - h / 2),          h / Math.abs(bounds[0].y - h / 2)) / 2 : 1;        words = data;        var text = vis.selectAll("text")          .data(words, function(d) { return d.text.toLowerCase(); });        text.transition()          .duration(1000)          .attr("transform", function(d) { return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")"; })          .style("font-size", function(d) { return d.size + "px"; });        text.enter().append("text")          .attr("text-anchor", "middle")          .attr("transform", function(d) { return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")"; })          .style("font-size", function(d) { return d.size + "px"; })          .on("click", function(d) {            load(d.text);          })          .style("opacity", 1e-6)        .transition()          .duration(1000)          .style("opacity", 1);        text.style("font-family", function(d) { return d.font; })          .style("fill", function(d) { return fill(d.text.toLowerCase()); })          .text(function(d) { return d.text; });        var exitGroup = background.append("g")          .attr("transform", vis.attr("transform"));        var exitGroupNode = exitGroup.node();        text.exit().each(function() {        exitGroupNode.appendChild(this);        });        exitGroup.transition()          .duration(1000)          .style("opacity", 1e-6)          .remove();        vis.transition()          .delay(1000)          .duration(750)          .attr("transform", "translate(" + [w >> 1, h >> 1] + ")scale(" + scale + ")");        }    </script>    <script>    function make_pie_chart(data, element) {        nv.addGraph(function() {            var chart = nv.models.pieChart()              .x(function(d) { return d[0] })              .y(function(d) { return d[1] })              .showLabels(true);                          chart.valueFormat(d3.format(',f'));            d3.select(element)                .datum(data)              .transition().duration(1200)                .call(chart);            return chart;        });    }        var post_likes = {{ post_likes|tojson|safe }};    var post_likes_given = {{ post_likes_given|tojson|safe }};    make_pie_chart(post_likes, "#post-likes-chart svg");    make_pie_chart(post_likes_given, "#post-likes-given-chart svg");        </script>{% endblock %}