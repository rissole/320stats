import reimport stringfrom collections import defaultdict# From Jonathan Feinberg's cue.language apparently + my brainstop_words = re.compile(r"^(\d|i|n|r|u|get|got|me|my|myself|we|us|our|ours|ourselves|you|your|yours|yourself|yourselves|he|hes|shes|him|his|himself|she|her|hers|herself|it|its|itself|they|them|their|theirs|themselves|what|which|who|whom|whose|this|that|thats|these|those|am|is|are|was|were|be|been|being|have|has|had|having|do|does|did|doing|will|would|should|can|could|ought|im|youre|youre|hes|shes|its|were|theyre|ive|youve|weve|theyve|id|youd|hed|shed|wed|theyd|ill|youll|hell|shell|well|theyll|isnt|arent|wasnt|werent|hasnt|havent|hadnt|doesnt|dont|didnt|wont|wouldnt|shant|shouldnt|cant|cannot|couldnt|mustnt|lets|thats|whos|whats|heres|theres|whens|wheres|whys|hows|a|an|the|and|but|if|or|because|as|until|while|of|at|by|for|with|about|against|between|into|through|during|before|after|above|below|to|from|up|upon|down|in|out|on|off|over|under|again|further|then|once|here|there|when|where|why|how|all|any|both|each|few|more|most|other|some|such|no|nor|not|only|own|same|so|than|too|very|say|says|said|shall)$")discard = re.compile('^(https?:)')# found this on stack overflow what of itpunct_regex = re.compile('[%s]' % re.escape(string.punctuation))max_words = 300def get_top_words(text):       frequency = defaultdict(int) # word -> number of times that word is used    for word in text.split():        word = punct_regex.sub('', word)        if len(word) == 0 or discard.search(word) or stop_words.search(word):            continue        frequency[word] += 1            frequency = sorted(frequency.iteritems(), key=lambda x: x[1], reverse=True)    frequency = [{'text': x[0], 'size': x[1]} for x in frequency]    return frequency[:max_words]